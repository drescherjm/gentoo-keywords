From 7819782d4bdd5cdd16b062658c0d44f503567f47 Mon Sep 17 00:00:00 2001
From: Richard Hulme <peper03@mythtv.org>
Date: Wed, 21 Aug 2013 22:35:10 +0200
Subject: [PATCH] Added ability to allow all recordings in a playlist to be
 re-recorded.

---
 mythtv/programs/mythfrontend/playbackbox.cpp | 20 ++++++++++++++++++++
 mythtv/programs/mythfrontend/playbackbox.h   |  1 +
 2 files changed, 21 insertions(+)

diff --git a/mythtv/programs/mythfrontend/playbackbox.cpp b/mythtv/programs/mythfrontend/playbackbox.cpp
index 40acce5..fe774f1 100644
--- a/mythtv/programs/mythfrontend/playbackbox.cpp
+++ b/mythtv/programs/mythfrontend/playbackbox.cpp
@@ -2756,6 +2756,7 @@ MythMenu* PlaybackBox::createPlaylistStorageMenu()
     menu->AddItem(tr("Enable Auto Expire"), SLOT(doPlaylistExpireSetOn()));
     menu->AddItem(tr("Mark As Watched"), SLOT(doPlaylistWatchedSetOn()));
     menu->AddItem(tr("Mark As Unwatched"), SLOT(doPlaylistWatchedSetOff()));
+    menu->AddItem(tr("Allow this episode to re-record"), SLOT(doPlaylistAllowRerecord()));
 
     return menu;
 }
@@ -3325,6 +3326,25 @@ void PlaybackBox::doAllowRerecord()
     *pginfo = ri;
 }
 
+void PlaybackBox::doPlaylistAllowRerecord()
+{
+    ProgramInfo *pginfo;
+    QStringList::Iterator it;
+
+    for (it = m_playList.begin(); it != m_playList.end(); ++it)
+    {
+        if ((pginfo = FindProgramInUILists(*it)))
+        {
+            RecordingInfo ri(*pginfo);
+            ri.ForgetHistory();
+            *pginfo = ri;
+        }
+    }
+
+    doClearPlaylist();
+    UpdateUILists();
+}
+
 void PlaybackBox::doJobQueueJob(int jobType, int jobFlags)
 {
    ProgramInfo *pginfo = CurrentItem();
diff --git a/mythtv/programs/mythfrontend/playbackbox.h b/mythtv/programs/mythfrontend/playbackbox.h
index 47c2ab7..0da39a4 100644
--- a/mythtv/programs/mythfrontend/playbackbox.h
+++ b/mythtv/programs/mythfrontend/playbackbox.h
@@ -248,6 +248,7 @@ class PlaybackBox : public ScheduleCommon
     void doPlaylistWatchedSetting(bool turnOn);
     void doPlaylistWatchedSetOn()      { doPlaylistWatchedSetting(true);  }
     void doPlaylistWatchedSetOff()     { doPlaylistWatchedSetting(false); }
+    void doPlaylistAllowRerecord();
     void togglePlayListTitle(void);
     void togglePlayListItem(void);
     void playSelectedPlaylist(bool random);
-- 
1.8.1.6

